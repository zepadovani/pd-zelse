
-------------------------------------------------------------------------
-------------------------------------------------------------------------


cmake -BBuild -DPD_PATH="/Applications/Pd-0.55-2.app/Contents/Resources/"
cd Build
make -j7


cmake -BBuild -DPD_FLOATSIZE64=1 -DPD_PATH="/Applications/Pd-0.55-2.app/Contents/Resources/"
cd Build
make -j7

cmake -BBuild -DPD_PATH=/Applications/Pd-0.55-2.app/Contents/Resources -DPD_EXTENSION=".pd_darwin"

-------------------------------------------------------------------------
-------------------------------------------------------------------------


compilar via bash:
- baixar o zip (tar não funciona)
- jogar no 'sources'
- bash vai.else.sh

Joga fora o armv7 e versões 32 bits

-------------------------------------------------------------------------

make install sfont-install plaits-install objectsdir=$(pwd)/.. arch="arm64 x86_64" extension=d_fat

make install sfont-install plaits-install objectsdir=$(pwd)/.. arch="arm64 x86_64" extension=d_amd64

make sfz && make sfz-install objectsdir=./sfz~


make install play.file  objectsdir=../ floatsize=32 arch="arm64 x86_64" extension=darwin-fat-32.so

-------------------------------------------------------------------------

make install objectsdir=../

make install objectsdir=../ arch="arm64 x86_64" extension=d_fat

make install objectsdir=../ floatsize=32 arch="arm64 x86_64" extension=darwin-fat-32.so
make install objectsdir=../ floatsize=64 arch="arm64 x86_64" extension=darwin-fat-64.so


make install floatsize=64 arch="arm64 x86_64" extension=darwin-fat-64.so
make install floatsize=32 arch="arm64 x86_64" extension=darwin-fat-32.so

make install objectsdir=../ floatsize=64 arch="arm64" extension=d_arm64

make install pdincludepath=../pd-0.55-0/src/ objectsdir=../ floatsize=32 arch="x86_64" extension=linux-amd64-32.so

make install pdincludepath=../pd-0.55-0/src/ objectsdir=../ floatsize=64 arch="x86_64" extension=linux-amd64-64.so


make install pdincludepath=../pd-0.55-0/src/ objectsdir=../ floatsize=32 arch="arm" extension=linux-arm-32.so

make install pdincludepath=../pd-0.55-0/src/ objectsdir=../ floatsize=64 arch="arm" extension=linux-arm-64.so

make install pdincludepath=../pd-0.55-0/src/ objectsdir=../ floatsize=32 arch="arm64" extension=linux-arm64-32.so

make install pdincludepath=../pd-0.55-0/src/ objectsdir=../ floatsize=64 arch="arm64" extension=linux-arm64-64.so



make install objectsdir=../ arch=i386 extension=d_i386

make install objectsdir=../ arch= x86_64 extension=d_amd64

make install objectsdir=../ floatsize=64 extension=darwin-amd64-64.so


--------------------------------------------------------------------------------------

./deken upload -v 1.0-0_rc11-with_live_electronics_tutorial else --no-source-error

--------------------------------------------------------------------------------------

Revert commits 

https://github.com/pure-data/pure-data/pull/1917#issuecomment-1470404530

git reset --hard HEAD~1
git push -f

Use Token password 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

--------------------------------------------------------------------------------------

codespell

LC_ALL=C find . -type f -name '*.pd' -exec sed -i '' s/else\\///g {} +

find . -name "*.txt" -print | xargs sed -i 's/this/that/g'

find . -name "*. pd" -print | xargs sed -i 's/this/that/g'

--------------------------------------------------------------------------------------


-----------------------------------------------------------------------------
Operating System	CPU-architecture		filename
-----------------------------------------------------------------------------
Linux			unspecified (any architecture)	my_lib.pd_linux
Linux 			i386 (Intel/AMD 32bit)		my_lib.l_i386
Linux			amd64 (Intel/AMD 64bit)		my_lib.l_amd64
Linux			arm (e.g. RaspberryPi)		my_lib.l_arm
Linux			arm64				my_lib.l_arm64

macOS			unspecified (any architecture)	my_lib.pd_darwin
macOS			fat (multiple archs)		my_lib.d_fat
macOS			PowerPC				smy_lib.d_ppc
macOS			i386 (Intel 32bit)		my_lib.d_i386
macOS			amd64 (Intel 64bit)		my_lib.d_amd64
macOS			arm64 (Apple Silicon)		my_lib.d_arm64

Windows			unspecified (any architecture)	my_lib.dll
Windows			i386 (Intel/AMD 32bit)		my_lib.m_i386
Windows			amd64 (Intel/AMD 64bit)		my_lib.m_amd64

--------------------------------------------------------------------------------------
